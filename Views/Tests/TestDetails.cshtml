@using Web_TracNghiem_HTSV.Services;
@model PaginatedList<Question>

@{
    ViewBag.Title = "Test Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Test Details</title>
    <!-- Import Tailwind CSS -->
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
</head>
<body class="bg-gray-100" style="margin-top: 20px;">
    <div class="container mx-auto p-4 sm:p-8">
        <h1 class="text-4xl font-bold mb-8 text-center text-blue-600">Kiểm tra</h1>

        @foreach (var question in Model.Items)
        {
            <div id="question-container-@question.QuestionId" class="bg-white shadow-md rounded-lg p-6 mb-8 quiz-card">
                <p class="mb-4 text-lg"><strong>Câu hỏi @Model.PageIndex</strong>: @question.QuestionContent</p>
                <div id="timer-@question.QuestionId" class="text-red-600 font-bold text-lg">30</div> <!-- Timer Div -->
                <div class="grid grid-cols-1 gap-4">
                    @using (Html.BeginForm("MakeTestResult", "Tests", FormMethod.Post, new { id = "quizForm" }))
                    {
                        @Html.Hidden("TestId", question.TestId)
                        @Html.Hidden("QuestionId", question.QuestionId)
                        @Html.Hidden("CorrectAnswer", question.CorrectAnswer.FirstOrDefault())
                        var sortedAnswers = question.Answers.OrderBy(a => a.AnswerDescription[0]).ToList();
                        var correctAnswer = question.CorrectAnswer.FirstOrDefault();
                        foreach (var answer in sortedAnswers)
                        {
                            @Html.Hidden($"Answers[{answer.AnswerId}]", answer.AnswerDescription)
                            <label id="option-@question.QuestionId-@answer.AnswerId" class="block bg-gray-200 p-3 m-3 rounded-lg hover:bg-gray-300 transition duration-200">
                                <input type="radio" name="selectedAnswer" value="@answer.AnswerDescription" class="mr-2">
                                @answer.AnswerDescription
                            </label>
                        }
                    }
                </div>
            </div>
        }

        <div class="text-center mt-8">
            @if (Model.HasNextPage)
            {
                <button id="confirm-button" class="bg-blue-500 text-white font-bold py-3 px-6 rounded-lg hover:bg-blue-600 transition duration-200 mx-auto block" onclick="submitAndNextPage(@(Model.PageIndex + 1), false)">
                    Câu tiếp theo
                </button>
            }
            else
            {
                <button id="confirm-button" class="bg-blue-500 text-white font-bold py-3 px-6 rounded-lg hover:bg-blue-600 transition duration-200 mx-auto block" onclick="submitAndNextPage(@(Model.PageIndex + 1), true)">
                    Câu tiếp theo
                </button>
                <button id="submit-button" class="bg-blue-500 text-white font-bold py-3 px-6 rounded-lg hover:bg-blue-600 transition duration-200 mx-auto block" style="display:none;" onclick="submitFinal()">
                    Nộp bài
                </button>
            }
        </div>
    </div>
    <style>
        #confirm-button {
            margin-top: -20px;
        }
    </style>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            var timerElement = document.getElementById("timer-@Model.Items[0]?.QuestionId");
            if (timerElement) {
                startTimer(timerElement, 30); // Bắt đầu đếm ngược 30 giây
            }
        });

        function startTimer(element, duration) {
            var timer = duration, seconds;
            var intervalId = setInterval(function () {
                seconds = timer;
                element.textContent = seconds;

                if (--timer < 0) {
                    clearInterval(intervalId); // Dừng bộ đếm
                    alert('Hết thời gian! Đang tự động chuyển đến câu hỏi tiếp theo.');

                    // Chọn đáp án sai và tự động chuyển đến câu hỏi tiếp theo
                    autoSelectIncorrectAnswer();
                }
            }, 1000); // Đếm ngược mỗi giây
        }

        function autoSelectIncorrectAnswer() {
            var form = document.getElementById('quizForm');
            var formData = new FormData(form);

            var correctAnswer = formData.get('CorrectAnswer');
            var answers = [];

            formData.forEach(function (value, key) {
                if (key.startsWith('Answers[')) {
                    answers.push(value);
                }
            });

            var incorrectAnswers = answers.filter(answer => answer !== correctAnswer);

            if (incorrectAnswers.length > 0) {
                var randomAnswer = incorrectAnswers[Math.floor(Math.random() * incorrectAnswers.length)];
                formData.set('selectedAnswer', randomAnswer);
            }

            fetch(form.action, {
                method: 'POST',
                body: formData
            }).then(response => {
                if (response.ok) {
                    window.location.href = `@Url.Action("TestDetails", new { id = Model.Items[0]?.TestId, page = @Model.PageIndex + 1 })`;
                } else {
                    alert('Có lỗi xảy ra. Vui lòng thử lại.');
                }
            }).catch(error => {
                console.error('Error:', error);
                alert('Có lỗi xảy ra. Vui lòng thử lại.');
            });
        }

        function submitAndNextPage(nextPage, isLastPage) {
            var confirmButton = document.getElementById('confirm-button');
            confirmButton.disabled = true; // Disable nút "Câu tiếp theo"

            var form = document.getElementById('quizForm');
            var formData = new FormData(form);

            fetch(form.action, {
                method: 'POST',
                body: formData
            }).then(response => {
                if (response.ok) {
                    if (isLastPage) {
                        confirmButton.style.display = 'none';
                        document.getElementById('submit-button').style.display = 'block';
                    } else {
                        window.location.href = `@Url.Action("TestDetails", new { id = Model.Items[0]?.TestId, page = ViewBag.NextPage })`;
                    }
                } else {
                    alert('Có lỗi xảy ra. Vui lòng thử lại.');
                    confirmButton.disabled = false; // Đảm bảo rằng nút có thể click lại khi có lỗi
                }
            }).catch(error => {
                console.error('Error:', error);
                alert('Có lỗi xảy ra. Vui lòng thử lại.');
                confirmButton.disabled = false; // Đảm bảo rằng nút có thể click lại khi có lỗi
            });
        }

        function submitFinal() {
            window.location.href = '@Url.Action("Index", "Tests")';
        }
    </script>

</body>
</html>
