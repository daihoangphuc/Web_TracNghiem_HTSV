
@model Web_TracNghiem_HTSV.Services.PaginatedList<Web_TracNghiem_HTSV.Models.Test>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">

<h1 class="text-4xl font-bold mb-8 text-center text-blue-600">Bài kiểm tra</h1>

@if (User.IsInRole("Administrators"))
{
    <div class="text-center mb-4">
        <a asp-action="Create" class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded">Create New</a>
    </div>
}
<!-- Search Form -->
<form asp-controller="Tests" asp-action="Index" method="get" class="mb-4">
    <div class="search-container">
        <input type="text" class="search-input w-full md:w-80 mb-2 md:mb-0" name="searchString" value="@ViewData["CurrentFilter"]" placeholder="Nhập bài kiểm tra" />
        <button type="submit" class="search-button ml-2">
            <i class="bi bi-search"></i>
        </button>
    </div>
</form>

<div class="overflow-x-auto">
    <table class="table-auto w-full border-collapse border border-gray-200">
        <thead>
            <tr class="bg-gray-100">
                <th class="px-4 py-2">Tên bài kiểm tra</th>
                @if (User.IsInRole("Administrators"))
                 {
                    <th class="px-4 py-2">

                        Số lượt làm bài
                    </th>
                }
                else
                {
                    <th class="px-4 py-2">
                        Chức năng
                    </th>
                }
                @if (User.IsInRole("Administrators"))
                {
                    <th class="px-4 py-2">Chức năng</th>
                    <th class="px-4 py-2">Khóa/Mở</th>
                }
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Items)
            {
                var isAdmin = User.IsInRole("Administrators");
                var testId = item.TestId;
                var hasQuestions = ViewBag.ListQuestion.Contains(testId);
                var hasTakenTest = ViewBag.UserTestResulted.Contains(testId);

                // Kiểm tra và hiển thị từng hàng dữ liệu
                if (isAdmin || (hasQuestions && !item.IsLocked))
                {
                    <tr class="border-b border-gray-200">
                        <td class="px-4 py-2 whitespace-nowrap">
                            @Html.DisplayFor(modelItem => item.TestName)
                            @if (!hasQuestions)
                            {
                                <p class="text-warning">(Chưa có câu hỏi)</p>
                            }
                        </td>
                        <td class="px-4 py-2">
                            @if (isAdmin)
                            {
                                @if (hasQuestions)
                                {
                                    @if (ViewBag.countUserMakeTest != null)
                                    {
                                        var userCounts = ViewBag.countUserMakeTest as IEnumerable<dynamic>;
                                        var userCount = userCounts.FirstOrDefault(tr => tr.TestId == testId)?.UserCount ?? 0;
                                        <span>@userCount</span>
                                    }
                                    else
                                    {
                                        <span>0</span>
                                    }
                                }
                            }
                            else if (hasTakenTest)
                            {
                                <a asp-action="ResultOfTest" asp-route-id="@item.TestId" class="btn btn-primary bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded">Kết quả</a>
                            }
                            else
                            {
                                <a asp-action="TestDetails" asp-route-id="@item.TestId" class="btn btn-success bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded">Bắt đầu</a>
                            }
                        </td>
                        @if (isAdmin)
                        {
                            <td class="px-4 py-2">
                                <a asp-action="Edit" asp-route-id="@item.TestId" class="btn btn-info bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded">Edit</a>
                                <a asp-action="Delete" asp-route-id="@item.TestId" class="btn btn-danger bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded">Delete</a>
                            </td>
                            <td class="px-4 py-2">
                                <form asp-action="@((item.IsLocked ? "UnlockTest" : "LockTest"))" asp-route-id="@item.TestId" method="post">
                                    <button type="submit" class="btn @(item.IsLocked ? "btn-success bg-green-500 hover:bg-green-700" : "btn-danger bg-red-500 hover:bg-red-700") text-white font-bold py-2 px-4 rounded">
                                        @(item.IsLocked ? "Unlock" : "Lock")
                                    </button>
                                </form>
                            </td>
                        }
                    </tr>
                }
            }
        </tbody>
    </table>
</div>
@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<nav aria-label="Page navigation" class="pt-3">
    <ul class="pagination">
        <li class="page-item @prevDisabled">
            <a class="page-link" href="?pageNumber=@(Model.PageIndex - 1)&searchString=@ViewData["CurrentFilter"]">Trang trước</a>
        </li>
        <li class="page-item @nextDisabled">
            <a class="page-link" href="?pageNumber=@(Model.PageIndex + 1)&searchString=@ViewData["CurrentFilter"]">Trang sau</a>
        </li>
    </ul>
</nav>


<style>

    /* Form */
    .search-form {
        display: flex;
        justify-content: center;
        margin-bottom: 20px;
    }

    .search-container {
        position: relative;
        width: 100%; /* Thanh tìm kiếm sẽ căng toàn bộ chiều rộng của phần tử cha */
        margin: 0 auto;
    }

    .search-input {
        width: 100%;
        padding: 10px 20px;
        border: 1px solid #38b7fd;
        border-radius: 25px;
        font-size: 16px;
        outline: none;
        background-color: transparent;
    }

    .search-button {
        position: absolute;
        top: 50%;
        right: 10px;
        transform: translateY(-50%);
        background-color: transparent;
        border: none;
        cursor: pointer;
        padding-bottom: 10px;
    }

        .search-button i {
            font-size: 20px;
        }

    @@media (min-width: 640px) {
        .search-container {
            width: 700px;
        }

        .search-input {
            width: 700px; /* Đặt lại kích thước cho trường hợp màn hình lớn hơn 640px */
            min-width: 200px; /* Đặt kích thước tối thiểu cho ô tìm kiếm */
        }
    }

</style>