@using Web_TracNghiem_HTSV.Services;
@model PaginatedList<Web_TracNghiem_HTSV.Models.Question>

@{
    ViewBag.Title = "Questions";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<p>
    <a asp-action="Create">Create New</a>
</p>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Quiz</title>
    <!-- Import Tailwind CSS -->
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
</head>
<body class="bg-gray-100">
    <div class="container mx-auto p-4 sm:p-8">
        <h1 class="text-4xl font-bold mb-8 text-center text-blue-600">Quiz</h1>

        @foreach (var question in Model.Items)
        {
            <div id="question-container-@question.TestId" class="bg-white shadow-md rounded-lg p-6 mb-8 quiz-card">
                <p class="mb-4 text-lg"><strong>Câu hỏi @Model.PageIndex:</strong> @question.QuestionContent</p>
                <div class="grid grid-cols-1 gap-4">
                    @using (Html.BeginForm("MakeTestResult", "Tests", FormMethod.Post, new { id = "quizForm" }))
                    {
                        @Html.Hidden("TestId", question.TestId)
                        var sortedAnswers = question.Answers.OrderBy(a => a.AnswerDescription[0]);
                        foreach (var answer in sortedAnswers)
                        {
                            <label id="option-@question.TestId-@answer.AnswerDescription" class="block bg-gray-200 p-3 m-3 rounded-lg hover:bg-gray-300 transition duration-200">
                                <input type="radio" name="selectedAnswer" value="@answer.AnswerDescription" class="mr-2">
                                @answer.AnswerDescription
                            </label>
                        }
                    }
                </div>
            </div>
        }

        <div class="text-center mt-8">
            @if (Model.HasNextPage)
            {
                <button id="confirm-button" class="bg-blue-500 text-white font-bold py-3 px-6 rounded-lg hover:bg-blue-600 transition duration-200 mx-auto block" onclick="submitAndNextPage(@(Model.PageIndex + 1), false)">
                    Xác nhận
                </button>
            }
            else
            {
                <button id="confirm-button" class="bg-blue-500 text-white font-bold py-3 px-6 rounded-lg hover:bg-blue-600 transition duration-200 mx-auto block" onclick="submitAndNextPage(@(Model.PageIndex + 1), true)">
                    Xác nhận
                </button>
                <button id="submit-button" class="bg-blue-500 text-white font-bold py-3 px-6 rounded-lg hover:bg-blue-600 transition duration-200 mx-auto block" style="display:none;" onclick="submitFinal()">
                    Nộp bài
                </button>
            }
        </div>
    </div>

    <script>
        function submitAndNextPage(nextPage, isLastPage) {
            var form = document.getElementById('quizForm');
            var formData = new FormData(form);
            fetch(form.action, {
                method: 'POST',
                body: formData
            }).then(response => {
                if (response.ok) {
                    if (isLastPage) {
                        document.getElementById('confirm-button').style.display = 'none';
                        document.getElementById('submit-button').style.display = 'block';
                    } else {
                        window.location.href = `@Url.Action("Index", "Questions")?page=${nextPage}`;
                    }
                } else {
                    alert('Có lỗi xảy ra. Vui lòng thử lại.');
                }
            }).catch(error => {
                console.error('Error:', error);
                alert('Có lỗi xảy ra. Vui lòng thử lại.');
            });
        }

        function submitFinal() {
            var form = document.getElementById('quizForm');
            form.submit();
        }

        function checkAnswer(TestId, selectedDescription, correctAnswer) {
            var selectedOption = selectedDescription.charAt(0);
            var selectedLabel = document.getElementById(`option-${TestId}-${selectedDescription}`);
            var correctLabel = document.getElementById(`option-${TestId}-${correctAnswer}`);

            var radios = document.querySelectorAll(`input[name="selectedAnswer"]`);
            radios.forEach(radio => {
                radio.disabled = true;
                if (radio.value === correctAnswer) {
                    radio.parentNode.classList.remove("bg-gray-200", "hover:bg-gray-300");
                    radio.parentNode.classList.add("bg-green-200");
                }
            });

            selectedLabel.classList.remove("bg-gray-200", "hover:bg-gray-300");
            if (selectedOption === correctAnswer) {
                selectedLabel.classList.add("bg-green-200");
            } else {
                selectedLabel.classList.add("bg-red-200");
                correctLabel.classList.remove("bg-gray-200", "hover:bg-gray-300");
                correctLabel.classList.add("bg-green-200");
            }
        }
    </script>
</body>
</html>



@*  

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.QuestionContent)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CorrectAnswer)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Test)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.QuestionContent)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CorrectAnswer)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Test.TestId)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.TestId">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.TestId">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.TestId">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
 *@